<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<article xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1">
    <info>
        <title>Руководства программиста</title>
        <author>
            <personname>
                <firstname>Сергей</firstname>
                <surname>Грузан</surname>
            </personname>
        </author>
    </info>
    <sect1>
        <title>Описание проекта</title>        
        <para>«Судоку»</para>        
        <para>Игровое поле представляет собой квадрат размером 9×9, разделённый на меньшие квадраты со стороной в 3 клетки. Таким образом, всё игровое поле состоит из 81 клетки. В них уже в начале игры стоят некоторые числа (от 1 до 9), называемые подсказками. </para>
        <para>От игрока требуется заполнить свободные клетки цифрами от 1 до 9 так, чтобы в каждой строке, в каждом столбце и в каждом малом квадрате 3×3 каждая цифра встречалась бы только один раз.</para>
        <para>Сложность судоку зависит от количества изначально заполненных клеток и от методов, которые нужно применять для её решения. Самые простые решаются дедуктивно: всегда есть хотя бы одна клетка, куда подходит только одно число. </para>
        <para>Некоторые головоломки можно решить за несколько минут, на другие можно потратить часы.</para>       
    </sect1>
    <sect1>
        <title>Детали реализации</title> 
        <para>Как реализована генерация судоку</para>
        
        <example>
            <title>Генерация реализована благодаря заранее созданному шаблону</title>
            <programlisting>
<![CDATA[
    var field = '0681594327597283416342671589934157268278936145156842973729318654813465792465729831';
	var arr = Array(1, 2, 3, 4, 5, 6, 7, 8, 9);
	var n = 9;
    sessionStorage['mas'] = [];
	for (var i = 0; i < 9; i++) 
	for (var j = 0; j < 9; j++) 	
		sessionStorage['mas[' + i + '][' + j + ']'] = 0;
	for (var i = 0; i < n; i++)
        sessionStorage['mas[' + i + ']'] = [];
	for (var j = 0; j < 9; j++) arr.push(arr.splice((Math.random() * arr.length), 1));
	for (var i = 1; i < 82; i++) { 
		if (i % 9 == 1) document.write('<tr>');
		if ((Math.random() * 10 > complication)) {
			var num = arr[field.substr(i, 1) - 1];
			var k = Math.floor(i / 9);
			var t = i % 9;
			if (t == 0) {
			    t = 8;
				k--;
			}
			else
				t--;
			document.write('<td>' + num + '</td>');
			sessionStorage['mas[' + (k) + '][' + t + ']'] = num;

		}
		else
			document.write('<td class="l"><input type="text" name=' + i + ' autocomplete="off" size="1" maxlength="1" onchange="change(this.name,this,value)"onkeydown = "javascript: return ((event.keyCode>47)&&(event.keyCode<58))"></td>');
		if (i % 9 == 0) document.write('</tr>');
                ]]>

</programlisting>
        </example>
        <example>
            <title>Проверка на заполнение всех ячеек</title>
            <programlisting><![CDATA[
	for (var i = 0; i < 9; i++) { 
		for (var j = 0; j < 9; j++) {
			if(sessionStorage['mas[' + i + '][' + j + ']'] < 1){			
				alert(i + "," + j);
				return false;	
			}

		}
		
	}
	return true;
                ]]></programlisting>
        </example>
        <example>
            <title>Код проверки выигрыша</title>
            <programlisting><![CDATA[
function checkwin() {
	var arr = [];
	for (var i = 0; i < 9; i++)
		arr[i] = 0;
	for (var i = 0; i < 9; i++) 
		for (var j = 0; j < 9; j++) 
			if ((arr[(sessionStorage['mas[' + i + '][' + j + ']'] - 1)]) == i){
				arr[(sessionStorage['mas[' + i + '][' + j + ']'] - 1)]++;
			}
			else {
				return false;
			}

			for (var i = 0; i < 9; i++)
		arr[i] = 0;
				
	for (var j = 0; j < 9; j++) 
		for (var i = 0; i < 9; i++) 
			if ((arr[(sessionStorage['mas[' + i + '][' + j + ']'] - 1)]) == j) {

				arr[(sessionStorage['mas[' + i + '][' + j + ']'] - 1)]++;
			}
			else{
				return false;
			}
	for (var k1 = 0; k1 < 3; k1++) {
		for(var k2 = 0; k2 < 3; k2++) {
			for (var t = 0; t < 9; t++)
				arr[t] = 0;
			for (var i = 0; i < 3; i++) 
				for (var j = 0; j < 3; j++) 
					if (arr[sessionStorage['mas[' + (i + (k1 * 3)) + '][' + (j + (k2 * 3)) + ']'] - 1] == 0) {
						arr[sessionStorage['mas[' + (i + (k1 * 3)) + '][' + (j + (k2 * 3)) + ']'] - 1]++;
					}
					else {
						return false;
					}
		}
	}
	return true;
                        }
                ]]></programlisting>
        </example>
    </sect1>
</article>
